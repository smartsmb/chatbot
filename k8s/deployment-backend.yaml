# k8s/deployment-backend.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatbot-backend
  namespace: chatbot
  labels:
    app: chatbot-backend
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: chatbot-backend
  template:
    metadata:
      labels:
        app: chatbot-backend
        version: v1
    spec:
      serviceAccountName: chatbot-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: api
          image: "<ACCOUNT_ID>.dkr.ecr.<REGION>.amazonaws.com/chatbot-backend:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          env:
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: chatbot-backend-secrets
                  key: OPENAI_API_KEY
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: chatbot-backend-secrets
                  key: JWT_SECRET
            # Environment-driven database configuration
            # Priority: 1. Environment variable, 2. ConfigMap, 3. Default SQLite
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: chatbot-backend-config
                  key: DATABASE_URL
                  optional: true
            - name: CORS_ORIGINS
              valueFrom:
                configMapKeyRef:
                  name: chatbot-backend-config
                  key: CORS_ORIGINS
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: chatbot-backend-config
                  key: ENVIRONMENT
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: chatbot-backend-config
                  key: LOG_LEVEL
            # Database connection details (for PostgreSQL)
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: chatbot-backend-config
                  key: DB_HOST
                  optional: true
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: chatbot-backend-config
                  key: DB_PORT
                  optional: true
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: chatbot-backend-config
                  key: DB_NAME
                  optional: true
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: chatbot-backend-secrets
                  key: DB_USERNAME
                  optional: true
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: chatbot-backend-secrets
                  key: DB_PASSWORD
                  optional: true
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /docs
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /docs
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
